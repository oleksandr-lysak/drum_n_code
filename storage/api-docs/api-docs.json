{
    "openapi": "3.0.0",
    "info": {
        "title": "Todo List API",
        "description": "API for managing tasks and subtasks.",
        "contact": {
            "email": "lysak.olexandr@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "/api",
            "description": "API server"
        }
    ],
    "paths": {
        "/api/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "User Name"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Login user and get token",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "user@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "format": "password",
                                        "example": "password"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User logged in",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logout user (revoke token)",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logged out",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a list of user's tasks",
                "operationId": "471d938a3bfaeb6fbd981d7c3e2728b0",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "todo",
                                "done"
                            ]
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 5,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "priority:desc,created_at:asc"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of tasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Task"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Create a new task",
                "operationId": "f803ebdb2300acdb7e93bbe8d0b9a2e8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskCreateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Task created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{id}": {
            "get": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Get a single task with subtasks",
                "operationId": "90b3cd4d2d4b416dc989d2055dbed06c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Update a task",
                "operationId": "1aaf37e74360ef4c10fadaee02ae77fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TaskUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Task updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "400": {
                        "description": "Cannot change status from done to another status"
                    },
                    "409": {
                        "description": "Task has incomplete subtasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task has incomplete subtasks"
                                        },
                                        "incomplete_tasks": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Delete a task",
                "operationId": "ad582480cd57c2a4e3b6a426943eeca5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Task deleted"
                    },
                    "400": {
                        "description": "Cannot delete completed task"
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/tasks/{id}/done": {
            "post": {
                "tags": [
                    "Tasks"
                ],
                "summary": "Mark task as done",
                "operationId": "9813654addd64a8c9c756fc290ece7fa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Task marked as done",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Task"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Task cannot be marked as done"
                    },
                    "409": {
                        "description": "Task has incomplete subtasks",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Task has incomplete subtasks"
                                        },
                                        "incomplete_tasks": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Task": {
                "required": [
                    "id",
                    "user_id",
                    "status",
                    "priority",
                    "title",
                    "created_at"
                ],
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 3
                    },
                    "title": {
                        "type": "string",
                        "example": "Main Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T12:00:00Z"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                },
                "type": "object"
            },
            "TaskCreateRequest": {
                "required": [
                    "status",
                    "priority",
                    "title"
                ],
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 3
                    },
                    "title": {
                        "type": "string",
                        "example": "New Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description",
                        "nullable": true
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TaskUpdateRequest": {
                "properties": {
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "done"
                        ],
                        "example": "done"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 2
                    },
                    "title": {
                        "type": "string",
                        "example": "Updated Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Updated description",
                        "nullable": true
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TaskCollection": {
                "properties": {
                    "data": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TaskResource"
                        }
                    }
                },
                "type": "object"
            },
            "TaskResource": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "parent_id": {
                        "type": "integer",
                        "example": null,
                        "nullable": true
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "todo",
                            "done"
                        ],
                        "example": "todo"
                    },
                    "priority": {
                        "type": "integer",
                        "maximum": 5,
                        "minimum": 1,
                        "example": 3
                    },
                    "title": {
                        "type": "string",
                        "example": "Main Task"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2024-06-04T12:00:00Z"
                    },
                    "completed_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "children": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Task"
                        }
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "email_verified_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": null,
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "format": "password",
                        "example": "password123"
                    },
                    "remember_token": {
                        "type": "string",
                        "example": null,
                        "nullable": true
                    }
                },
                "type": "object"
            },
            "TaskPolicy": {
                "properties": {
                    "viewAny": {
                        "type": "boolean",
                        "example": false
                    },
                    "view": {
                        "type": "boolean",
                        "example": true
                    },
                    "create": {
                        "type": "boolean",
                        "example": false
                    },
                    "update": {
                        "type": "boolean",
                        "example": true
                    },
                    "delete": {
                        "type": "boolean",
                        "example": true
                    },
                    "restore": {
                        "type": "boolean",
                        "example": false
                    },
                    "forceDelete": {
                        "type": "boolean",
                        "example": false
                    }
                },
                "type": "object"
            }
        }
    },
    "tags": [
        {
            "name": "Auth",
            "description": "Authentication endpoints"
        },
        {
            "name": "Tasks",
            "description": "Task management endpoints"
        }
    ]
}